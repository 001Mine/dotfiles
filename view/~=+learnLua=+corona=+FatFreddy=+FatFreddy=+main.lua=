let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <F1> :call xolox#lua#help()
noremap <buffer> <silent> [] m':call xolox#lua#jumpotherfunc(0)
noremap <buffer> <silent> [[ m':call xolox#lua#jumpthisfunc(0)
noremap <buffer> <silent> [{ m':call xolox#lua#jumpblock(0)
nmap <buffer> <silent> \ ,PP
noremap <buffer> <silent> ]] m':call xolox#lua#jumpotherfunc(1)
noremap <buffer> <silent> ][ m':call xolox#lua#jumpthisfunc(1)
noremap <buffer> <silent> ]} m':call xolox#lua#jumpblock(1)
nmap <buffer> <F1> :call xolox#lua#help()
inoremap <buffer> <silent> <expr> " xolox#lua#completedynamic('"')
inoremap <buffer> <silent> <expr> ' xolox#lua#completedynamic("'")
inoremap <buffer> <silent> <expr> . xolox#lua#completedynamic('.')
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s:--[[,m:\ ,e:]],:--
setlocal commentstring=--%s
setlocal complete=.,w,b,u,t,i
setlocal completefunc=xolox#lua#completefunc
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=%*[^\"]\"%f\"%*\\D%l:\ %m,\"%f\"%*\\D%l:\ %m,%-G%f:%l:\ (Each\ undeclared\ identifier\ is\ reported\ only\ once,%-G%f:%l:\ for\ each\ function\ it\ appears\ in.),%-GIn\ file\ included\ from\ %f:%l:%c,%-GIn\ file\ included\ from\ %f:%l,%-Gfrom\ %f:%l:%c,%-Gfrom\ %f:%l,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,\"%f\"\\,\ line\ %l%*\\D%c%*[^\ ]\ %m,%D%*\\a[%*\\d]:\ Entering\ directory\ `%f',%X%*\\a[%*\\d]:\ Leaving\ directory\ `%f',%D%*\\a:\ Entering\ directory\ `%f',%X%*\\a:\ Leaving\ directory\ `%f',%DMaking\ %*\\a\ in\ %f,%f|%l|\ %m
setlocal expandtab
if &filetype != 'lua'
setlocal filetype=lua
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=\\v<((do|load)file|require)[^'\"]*['\"]\\zs[^'\"]+
setlocal includeexpr=xolox#lua#includeexpr(v:fname)
setlocal indentexpr=GetLuaIndent()
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e,0=end,0=until
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=make
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=xolox#lua#omnifunc
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=~/.vim/spellfile.add
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'lua'
setlocal syntax=lua
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=120
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
1,6fold
1,7fold
8,31fold
33,51fold
54,84fold
53,84fold
86,97fold
99,117fold
119,122fold
124,130fold
8,131fold
132,144fold
146,165fold
167,167fold
167,218fold
220,241fold
243,257fold
259,282fold
284,339fold
341,435fold
341,436fold
284,436fold
438,477fold
518,522fold
518,531fold
532,541fold
479,557fold
559,573fold
575,603fold
605,611fold
613,615fold
618,632fold
1
normal zo
1
normal zc
1
normal zc
8
normal zo
8
normal zo
33
normal zo
53
normal zo
54
normal zo
53
normal zo
86
normal zo
99
normal zo
119
normal zo
124
normal zo
8
normal zo
132
normal zo
146
normal zo
167
normal zo
167
normal zc
167
normal zo
220
normal zo
243
normal zo
259
normal zo
284
normal zo
284
normal zo
341
normal zo
341
normal zo
341
normal zo
284
normal zo
438
normal zo
479
normal zo
518
normal zo
518
normal zc
518
normal zo
532
normal zo
479
normal zo
559
normal zo
575
normal zo
605
normal zo
613
normal zo
618
normal zo
let s:l = 259 - ((10 * winheight(0) + 11) / 22)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
259
normal! 037l
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
